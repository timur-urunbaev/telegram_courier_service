version: '3'

services:

  django:
    image: python:latest
    container_name: django_app
    command: >
      sh -c "cd /app && pip install -r requirements.txt && python manage.py makemigrations tgbot && python manage.py migrate --fake-initial && python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./kurier:/app
    ports:
      - "8000:8000"
    depends_on:
      - mariadb
    networks:
      delivery-network:
        ipv4_address: 172.28.0.2
  
  redis:
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: >
      sh -c "redis-server --appendonly yes"
    networks:
      delivery-network:
        ipv4_address: 172.28.0.3
      
  mariadb:
    image: mariadb:latest
    container_name: mariadb_server
    environment:
      MYSQL_ROOT_PASSWORD: admin@29
      MYSQL_DATABASE: delivery_service
      MYSQL_USER: deliverydb_user
      MYSQL_PASSWORD: Us@3delkop
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      delivery-network:
        ipv4_address: 172.28.0.4

  bot:
    image: python:latest
    container_name: telegram_bot
    command: >
      sh -c "cd /app && pip install -r requirements.txt && python manage.py bot"
    volumes:
      - ./kurier:/app
    depends_on:
      - redis
      - django
    networks:
        delivery-network:
          ipv4_address: 172.28.0.5
  
  scheduler:
    image: python:latest
    container_name: scheduler
    command: >
      sh -c "cd /app && pip install -r requirements.txt && python scheduler.py"
    volumes:
      - ./scheduler:/app
    depends_on:
      - redis
      - django
    networks:
      delivery-network:
        ipv4_address: 172.28.0.6

volumes:
  mariadb_data:
  redis_data:

networks:
  delivery-network:
    name: delivery-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1